apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: GF_SECURITY_ADMIN_USER
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: GF_SECURITY_ADMIN_PASSWORD
            - name: GF_USERS_ALLOW_SIGN_UP
              value: {{ .Values.env.GF_USERS_ALLOW_SIGN_UP | quote }}
            - name: GF_INSTALL_PLUGINS
              value: {{ .Values.env.GF_INSTALL_PLUGINS | quote }}
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            {{- if .Values.dashboards.enabled }}
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
      volumes:
        - name: grafana-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: grafana-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        {{- if .Values.dashboards.enabled }}
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        {{- end }}
